name: Build, test, and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push]

jobs:
  build_wheels:
    name: Build wheels on ${{matrix.arch}} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-12]
        arch: [auto]
        include:
          - os: ubuntu-20.04
            arch: aarch64

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.7'

      - uses: docker/setup-qemu-action@v1
        if: ${{ matrix.arch == 'aarch64' }}
        name: Set up QEMU

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: ${{matrix.arch}}
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"
          CIBW_BEFORE_ALL: "bash -c 'cd \"{project}\"; sh .github/tools/install_yajl.sh'"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_MACOS: "IJSON_EMBED_YAJL=1"
          CIBW_ENVIRONMENT_WINDOWS: "IJSON_EMBED_YAJL=1"
          CIBW_TEST_COMMAND: "bash -c 'cd \"{project}\"; pytest -vv'"
          CIBW_TEST_REQUIRES: pytest cffi

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
